{"version":3,"sources":["components/BreakInterval.js","components/SessionLength.js","components/Timer.js","components/App.js","reportWebVitals.js","index.js"],"names":["BreakInterval","props","id","className","disabled","isPlay","onClick","breakInterval","decreaseBreak","increaseBreak","SessionLength","sessionLength","decreaseSession","increaseSession","Timer","state","isSession","timerSecond","intervalId","playTimer","bind","stopTimer","resetTimer","decreaseTimer","this","onPlayTimer","setInterval","setState","clearInterval","onStopTimer","timerMinute","toggleInterval","updateTimerMinute","breakLength","prevState","React","Component","App","onIncreaseBreakLength","onDecreaseBreakLength","onIncreaseSessionLength","onDecreaseSessionLength","onToggleInterval","onUpdateTimerMinute","onResetTimer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdb36ab3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction BreakInterval(props) {\r\n    function decreaseCounter() {\r\n    if (props.breakInterval === 1) {\r\n        return;\r\n    }\r\n    props.decreaseBreak()\r\n    }\r\n\r\nfunction increaseCounter() {\r\n    if (props.breakInterval === 60) {\r\n        return;\r\n    }\r\n    props.increaseBreak()\r\n}\r\n\r\n    return (\r\n        <section>\r\n                <h4 id=\"break-label\">Break Length</h4>\r\n            <section className=\"interval-container\">\r\n                <button disabled={props.isPlay === true ? \"disabled\" : \"\"}\r\n                onClick={decreaseCounter} id=\"break-decrement\">Down</button>\r\n                <p className=\"interval-length\" id=\"break-length\">{props.breakInterval}</p>\r\n                <button disabled={props.isPlay === true ? \"disabled\" : \"\"}\r\n                onClick={increaseCounter} id=\"break-increment\">Up</button>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default BreakInterval;\r\n","import React from 'react';\r\n\r\nfunction SessionLength(props) {\r\n    function increaseSession() {\r\n        if (props.sessionLength === 60) {\r\n            return;\r\n        }\r\n        props.increaseSession();\r\n    }\r\n\r\n    function decreaseSession() {\r\n        if (props.sessionLength === 1) {\r\n            return;\r\n        }\r\n        props.decreaseSession()\r\n    }\r\n    return (\r\n        <section>\r\n                <h4 id=\"session-label\">Session Length</h4>\r\n            <section className=\"interval-container\">\r\n                <button disabled={props.isPlay === true ? \"disabled\" : \"\"}\r\n                onClick={decreaseSession} id=\"session-decrement\">Down</button>\r\n                    <p className=\"interval-length\" id=\"session-length\">{props.sessionLength}</p>\r\n                <button disabled={props.isPlay === true ? \"disabled\" : \"\"}\r\n                onClick={increaseSession} id=\"session-increment\">Up</button>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SessionLength;\r\n","import React from 'react';\r\n\r\nclass Timer extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            isSession: true,\r\n            timerSecond: 0,\r\n            intervalId: 0\r\n        }\r\n        this.playTimer = this.playTimer.bind(this);\r\n        this.stopTimer = this.stopTimer.bind(this);\r\n        this.resetTimer = this.resetTimer.bind(this);\r\n        this.decreaseTimer = this.decreaseTimer.bind(this);\r\n    }\r\n\r\n    playTimer() {\r\n        this.props.onPlayTimer()\r\n        let intervalId = setInterval(this.decreaseTimer, 1000);\r\n        this.setState({\r\n            intervalId: intervalId\r\n        })\r\n    }\r\n\r\n    stopTimer() {\r\n        clearInterval(this.state.intervalId);\r\n        this.props.onStopTimer();\r\n    }\r\n\r\n    resetTimer() {\r\n        this.stopTimer();\r\n        this.props.resetTimer();\r\n        this.setState({\r\n            timerSecond: 0,\r\n            isSession: true\r\n        });\r\n    }\r\n\r\n    decreaseTimer() {\r\n        switch (this.state.timerSecond) {\r\n            case 0:\r\n                if (this.props.timerMinute === 0) {\r\n                    if (this.state.isSession) {\r\n                        this.setState({\r\n                            isSession: false,\r\n                            timerSecond: 60,\r\n                        });\r\n\r\n                        this.props.toggleInterval(this.state.isSession);\r\n\r\n                    } else {\r\n                        this.setState({\r\n                            isSession: true,\r\n                            timerSecond: 60\r\n                        });\r\n\r\n                        this.props.toggleInterval(this.state.isSession)\r\n                    }\r\n                } else {\r\n                    this.props.updateTimerMinute()\r\n                    this.setState({\r\n                        timerSecond: 60\r\n                    })\r\n                }\r\n\r\n            default:\r\n            if (this.props.breakLength > 0 || this.props.sessionLength > 0) {\r\n                this.setState((prevState) => {\r\n                    return {\r\n                        timerSecond: prevState.timerSecond - 1\r\n                    };\r\n                });\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <section className=\"timer-container\">\r\n                    <h4 id=\"timer-label\">{this.state.isSession === true ? \"Session\" :\r\n                    \"Break\"}</h4>\r\n                    <div id=\"time-left\">\r\n                        <span className=\"timer\">{this.props.timerMinute}</span>\r\n                        <span className=\"timer\">:</span>\r\n                        <span className=\"timer\">\r\n                            {this.state.timerSecond === 0\r\n                                ? \"00\"\r\n                                : this.state.timerSecond < 10\r\n                                ? \"0\" + this.state.timerSecond\r\n                                : this.state.timerSecond}\r\n                        </span>\r\n                    </div>\r\n                </section>\r\n                <section className=\"timer-actions\">\r\n                    <button onClick={this.playTimer} id=\"start_stop\">Play</button>\r\n                    <button onClick={this.stopTimer}>Stop</button>\r\n                    <button onClick={this.resetTimer} id=\"reset\">Refresh</button>\r\n                </section>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer;\r\n","import React from 'react';\nimport '../App.css';\nimport BreakInterval from './BreakInterval';\nimport SessionLength from './SessionLength';\nimport Timer from './Timer'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      breakLength: 5,\n      sessionLength: 25,\n      timerMinute: 25,\n      isPlay: false\n    };\n\n    this.onIncreaseBreakLength = this.onIncreaseBreakLength.bind(this);\n    this.onDecreaseBreakLength = this.onDecreaseBreakLength.bind(this);\n    this.onIncreaseSessionLength = this.onIncreaseSessionLength.bind(this);\n    this.onDecreaseSessionLength = this.onDecreaseSessionLength.bind(this);\n    this.onToggleInterval = this.onToggleInterval.bind(this);\n    this.onUpdateTimerMinute = this.onUpdateTimerMinute.bind(this);\n    this.onResetTimer = this.onResetTimer.bind(this);\n    this.onPlayTimer = this.onPlayTimer.bind(this);\n    this.onStopTimer = this.onStopTimer.bind(this);\n  }\n\n  onPlayTimer() {\n    this.setState({\n      isPlay: true\n    })\n  }\n\n  onStopTimer() {\n    this.setState({\n      isPlay: false\n    })\n  }\n\n  onResetTimer() {\n    this.setState({\n      timerMinute: this.state.sessionLength,\n      isPlay: false\n    })\n  }\n\n  onIncreaseBreakLength() {\n    this.setState((prevState) => {\n      return {\n        breakLength: prevState.breakLength + 1,\n      }\n    })\n  }\n\n  onDecreaseBreakLength() {\n    this.setState((prevState) => {\n      return {\n        breakLength: prevState.breakLength - 1\n      }\n    })\n  }\n\n  onIncreaseSessionLength() {\n    this.setState((prevState) => {\n      return {\n        sessionLength: prevState.sessionLength + 1,\n        timerMinute: prevState.sessionLength + 1\n      }\n    })\n  }\n\n  onDecreaseSessionLength() {\n    this.setState((prevState) => {\n      return {\n        sessionLength: prevState.sessionLength - 1,\n        timerMinute: prevState.sessionLength - 1\n      }\n    })\n  }\n\n  onUpdateTimerMinute() {\n    this.setState((prevState) => {\n      return {\n        timerMinute: prevState.timerMinute - 1\n      }\n    })\n  }\n\n  onToggleInterval(isSession) {\n    if (isSession) {\n      if (this.state.sessionLength > 0) {\n        this.setState({\n          sessionLength: this.state.sessionLength - 1,\n          timerMinute: this.state.sessionLength - 1\n        })\n      }\n    } else {\n      if (this.state.breakLength > 0) {\n        this.setState({\n          breakLength: this.state.breakLength - 1,\n          timerMinute: this.state.breakLength - 1\n        })\n      }\n    }\n  }\n\n  render() {\n    return (\n      <main>\n        <h2>Pomodoro Clock</h2>\n        <section className=\"interval-length-container\">\n          <BreakInterval\n            isPlay={this.state.isPlay}\n            breakInterval={this.state.breakLength}\n            increaseBreak={this.onIncreaseBreakLength}\n            decreaseBreak={this.onDecreaseBreakLength}\n          />\n          <SessionLength\n            isPlay={this.state.isPlay}\n            sessionLength={this.state.sessionLength}\n            increaseSession={this.onIncreaseSessionLength}\n            decreaseSession={this.onDecreaseSessionLength}\n          />\n        </section>\n        <Timer\n          timerMinute={this.state.timerMinute}\n          breakLength={this.state.breakLength}\n          sessionLength={this.state.sessionLength}\n          updateTimerMinute={this.onUpdateTimerMinute}\n          toggleInterval={this.onToggleInterval}\n          resetTimer={this.onResetTimer}\n          onPlayTimer={this.onPlayTimer}\n          onStopTimer={this.onStopTimer}\n          />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\n<script src=\"https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js\"></script>\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}